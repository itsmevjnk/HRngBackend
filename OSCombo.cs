/*
 * OSCombo.cs - Functions for generating OS-architecture combos.
 * Created on: 11:39 02-12-2021
 * Author    : itsmevjnk
 */

using System;
using System.Runtime.InteropServices;

namespace HRngBackend
{
    public static class OSCombo
    {
        /// <summary>
        ///  The OS-architecture combo. Generated by the static constructor below.
        /// </summary>
        public static string Combo;

        /// <summary>
        ///  Constructor that retrieves the OS-architecture combo for the machine this library is running on.<br/>
        ///  An OS-architecture combo has the form of <c>&lt;OS&gt;.&lt;Architecture&gt;</c>, where:
        ///  <list type="bullet">
        ///   <item><description><c>OS</c> can be either <c>FreeBSD</c>, <c>Linux</c>, <c>OSX</c> or <c>Windows</c></description></item>
        ///   <item><description><c>Architecture</c> can be either <c>X86</c>, <c>X64</c>, <c>Arm</c> or <c>Arm64</c></description></item>
        ///  </list>
        /// </summary>
        /// <exception cref="NotSupportedException">Thrown if the running OS is not supported.</exception>
        static OSCombo()
        {
            /* Get OS */
            if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux)) Combo = "Linux";
            else if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX)) Combo = "OSX";
            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) Combo = "Windows";
            else throw new NotSupportedException("Unsupported operating system");

            /* Get architecture */
            Combo += "." + Convert.ToString(RuntimeInformation.OSArchitecture);
        }
    }
}
